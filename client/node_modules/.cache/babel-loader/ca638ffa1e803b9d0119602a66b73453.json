{"ast":null,"code":"var _jsxFileName = \"/home/mateus/Documentos/API/react-db/client/src/App.tsx\";\nimport { Component } from \"react\";\nimport { Axios } from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.cadastrarCliente = void 0;\n\n    this.eventoFormulario = evento => {\n      evento.preventDefault();\n    };\n\n    this.obterPnome = evento => {\n      this.setState({\n        pnome: evento.target.value\n      });\n      console.log(this.state.pnome);\n    };\n\n    this.obterPassword = evento => {\n      this.setState({\n        password: evento.target.value\n      });\n      console.log(this.state.password);\n    };\n\n    this.obterEmail = evento => {\n      this.setState({\n        email: evento.target.value\n      });\n      console.log(this.state.email);\n    };\n\n    this.postUser = async () => {\n      try {\n        let res = await Axios.post('http://localhost:3001/users/cadastrar');\n        let users = res.data;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      pnome: '',\n      password: '',\n      email: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"col s12\",\n        onSubmit: this.eventoFormulario,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s6\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.pnome,\n              onChange: this.obterPnome,\n              id: \"first_name\",\n              type: \"text\",\n              className: \"validate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"first_name\",\n              children: \"Primeiro nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.password,\n              onChange: this.obterPassword,\n              id: \"password\",\n              type: \"password\",\n              className: \"validate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-field col s12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.email,\n              onChange: this.obterEmail,\n              id: \"email\",\n              type: \"email\",\n              className: \"validate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col s12\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onChange: this.cadastrarCliente,\n              children: \"Enviar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nfunction validateName(users) {\n  throw new Error(\"Function not implemented.\");\n}\n\nfunction setUsers(users) {\n  throw new Error(\"Function not implemented.\");\n}\n\nfunction setTask(task) {\n  throw new Error(\"Function not implemented.\");\n}\n\nfunction setLoading(arg0) {\n  throw new Error(\"Function not implemented.\");\n}","map":{"version":3,"sources":["/home/mateus/Documentos/API/react-db/client/src/App.tsx"],"names":["Component","Axios","App","constructor","props","cadastrarCliente","eventoFormulario","evento","preventDefault","obterPnome","setState","pnome","target","value","console","log","state","obterPassword","password","obterEmail","email","postUser","res","post","users","data","error","render","validateName","Error","setUsers","setTask","task","setLoading","arg0"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport CadastradorCliente from \"../src/cadastradores/cadastradorCliente\";\nimport { Axios } from \"axios\";\n\ntype state = {\n  pnome: string,\n  password: string;\n  email: string\n}\nclass App extends Component<any, state> {\n  cadastrarCliente: FormEventHandler<HTMLButtonElement> | undefined;\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      pnome: '',\n      password: '',\n      email: ''\n    }\n  }\n\n  eventoFormulario = (evento: any) => {\n    evento.preventDefault()\n  }\n\n  obterPnome = (evento: any) => {\n    this.setState({\n      pnome: evento.target.value\n    })\n    console.log(this.state.pnome)\n  }\n\n  obterPassword = (evento: any) => {\n    this.setState({\n      password: evento.target.value\n    })\n    console.log(this.state.password)\n  }\n\n  obterEmail = (evento: any) => {\n    this.setState({\n      email: evento.target.value\n    })\n    console.log(this.state.email)\n  }\n\n  public postUser = async () => {\n    try {\n      let res = await Axios.post('http://localhost:3001/users/cadastrar');\n      let users = res.data\n\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  \n\n  render() {\n    return (\n      <div className=\"row\">\n        <form className=\"col s12\" onSubmit={this.eventoFormulario}>\n          <div className=\"row\">\n            <div className=\"input-field col s6\">\n              <input value={this.state.pnome} onChange={this.obterPnome} id=\"first_name\" type=\"text\" className=\"validate\" />\n              <label htmlFor=\"first_name\">Primeiro nome</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input value={this.state.password} onChange={this.obterPassword} id=\"password\" type=\"password\" className=\"validate\" />\n              <label htmlFor=\"password\">Password</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input value={this.state.email} onChange={this.obterEmail} id=\"email\" type=\"email\" className=\"validate\" />\n              <label htmlFor=\"email\">Email</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s12\">\n              <button type=\"submit\" onChange={this.cadastrarCliente}>Enviar</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\nexport default App;\n\nfunction validateName(users: any): any {\n  throw new Error(\"Function not implemented.\");\n}\n\n\nfunction setUsers(users: any) {\n  throw new Error(\"Function not implemented.\");\n}\n\n\nfunction setTask(task: any) {\n  throw new Error(\"Function not implemented.\");\n}\n\n\nfunction setLoading(arg0: boolean) {\n  throw new Error(\"Function not implemented.\");\n}\n"]},"metadata":{},"sourceType":"module"}